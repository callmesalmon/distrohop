.TH Distrohop

.SH NAME

Distrohop \- The modern tool made for distrohopping!

.SH DESCRIPTION

Distrohop is a modern tool made for distrohopping in the easiest way possible. It allows
you to use a config file for the best experience possible. Very easy to use and written
in pure shell script (VERY PORTABLE). It would be quicker to list all systems that distrohop
DOESN'T work on, than the systems it does work on. It basically only doesn't work on Windows.

.SH SYNOPSIS

.B hop
<username>

.B hopconf
<username>

.B hopkilo
<filename>

.SH DISTROHOP ARGUMENTS

.TP
.BR <username>
The name of the user whose system files distrohop is configuring,
for example this might be: john; jane or jill.

.SH DISTROHOP-MKCONFIG ARGUMENTS

.TP
.BR <username>
The name of the user whose system files distrohop is configuring,
for example this might be: john; jane or jill.

.SH DISTROHOP-KILO

distrohop-kilo is the builtin text editor for distrohop. It can be added
to your distrohop installation by running ./setup.sh with the --editor
flag enabled. It works like snaptoken's kilo fork, as the binary is identical
and the upstream repo IS the snaptoken fork. You can see the snaptoken fork
at: https://github.com/snaptoken/kilo-src

.SH DISTROHOP CONFIG FILE

The distrohop config file is located in: /home/{user}/distrohop.cfg.sh
and works just like a normal shell file. All configuration options are set
as variables in this file.

.SH DISTROHOP CONFIG FILE ARGUMENTS

.TP
.BR DISTROHOP_USER
The user of distrohop (e.g /home/{user}). This NEEDS to be set as distrohop is
run with "sudo", and we don't want to configure root lol :3

.TP
.BR PACKAGE_MANAGER
This is your package manager. It needs to be entered WITHOUT any parameters (all)
paramaters are declared in other variables. If you're -- for example -- running on
a debian-based OS (debian, ubuntu, kali etc.) this would be "apt"/"apt-get", if
you're running a fedora-based OS (fedora, centos etc.) this'd be "dnf"/"yum" and
if you have no friends this would be "pacman".

.TP
.BR UPDATE_CMD
This is your update command for your package manager. ONLY the parameter, not the
name of the package manager as it's called with $PACKAGE_MANAGER $UPDATE_CMD, some
common ones are "update", "upgrade" and "-Syu".

.TP
.BR INSTALL_CMD
This is your install command for the package manager. Same as with the update command,
ONLY the parameter is needed. Some common one's here are "install", "in" and "-S"

.TP
.BR PACKAGES
These are your packages which you want to install. Only packages that are installable
trough your package manager, though, there's another option for those that aren't.
This should NOT be provided as an array, but rather as a string with package names
separated by spaces (this works with most package managers), for example on could
set PACKAGES to be "neovim clang nasm zsh" or "curl python3 grub2 sbcl".

.TP
.BR PACKAGES_NOMANAGER_CMD
These are the packages which you want to install, but can't be installed using your
regular package manager. Unlike $PACKAGES, this is set as an array of commands which
are used to install your software. For example, if johnny3003's project "awesome-proj"
isn't installable by package manager means, it might be installable by:
PACKAGES_NOMANAGER_CMD=( "git clone https://johnny3003projects.com/awesome-proj"
                         "cd awesome-proj && python3 install-script.py" )

.TP
.BR SHELL_OF_CHOICE
This is your shell of choice. THIS NEEDS TO BE A FULL PATH. Available shells can be
found with "chsh -l". One might for example set this to be /usr/bin/zsh.

.TP
.BR USER_PROMPT
This is the prompt set by the user. If this isn't set, distrohop will use its abyssmal
default prompt: "user@platform:directory" without any colors.
